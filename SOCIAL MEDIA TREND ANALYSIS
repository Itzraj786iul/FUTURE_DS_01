{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":12018810,"sourceType":"datasetVersion","datasetId":7561596}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\n\ndf = pd.read_csv('/kaggle/input/sentiment-analysis/sentimentdataset.csv')  # Replace with your actual filename\ndf.head()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:49.316790Z","iopub.execute_input":"2025-06-01T14:07:49.317126Z","iopub.status.idle":"2025-06-01T14:07:49.769059Z","shell.execute_reply.started":"2025-06-01T14:07:49.317103Z","shell.execute_reply":"2025-06-01T14:07:49.768265Z"}},"outputs":[{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0.1  Unnamed: 0  \\\n0             0           0   \n1             1           1   \n2             2           2   \n3             3           3   \n4             4           4   \n\n                                                Text    Sentiment  \\\n0   Enjoying a beautiful day at the park!        ...   Positive     \n1   Traffic was terrible this morning.           ...   Negative     \n2   Just finished an amazing workout! ðŸ’ª          ...   Positive     \n3   Excited about the upcoming weekend getaway!  ...   Positive     \n4   Trying out a new recipe for dinner tonight.  ...   Neutral      \n\n             Timestamp            User     Platform  \\\n0  2023-01-15 12:30:00   User123          Twitter     \n1  2023-01-15 08:45:00   CommuterX        Twitter     \n2  2023-01-15 15:45:00   FitnessFan      Instagram    \n3  2023-01-15 18:20:00   AdventureX       Facebook    \n4  2023-01-15 19:55:00   ChefCook        Instagram    \n\n                                     Hashtags  Retweets  Likes       Country  \\\n0   #Nature #Park                                  15.0   30.0     USA         \n1   #Traffic #Morning                               5.0   10.0     Canada      \n2   #Fitness #Workout                              20.0   40.0   USA           \n3   #Travel #Adventure                              8.0   15.0     UK          \n4   #Cooking #Food                                 12.0   25.0    Australia    \n\n   Year  Month  Day  Hour  \n0  2023      1   15    12  \n1  2023      1   15     8  \n2  2023      1   15    15  \n3  2023      1   15    18  \n4  2023      1   15    19  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0.1</th>\n      <th>Unnamed: 0</th>\n      <th>Text</th>\n      <th>Sentiment</th>\n      <th>Timestamp</th>\n      <th>User</th>\n      <th>Platform</th>\n      <th>Hashtags</th>\n      <th>Retweets</th>\n      <th>Likes</th>\n      <th>Country</th>\n      <th>Year</th>\n      <th>Month</th>\n      <th>Day</th>\n      <th>Hour</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>Enjoying a beautiful day at the park!        ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 12:30:00</td>\n      <td>User123</td>\n      <td>Twitter</td>\n      <td>#Nature #Park</td>\n      <td>15.0</td>\n      <td>30.0</td>\n      <td>USA</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>Traffic was terrible this morning.           ...</td>\n      <td>Negative</td>\n      <td>2023-01-15 08:45:00</td>\n      <td>CommuterX</td>\n      <td>Twitter</td>\n      <td>#Traffic #Morning</td>\n      <td>5.0</td>\n      <td>10.0</td>\n      <td>Canada</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2</td>\n      <td>Just finished an amazing workout! ðŸ’ª          ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 15:45:00</td>\n      <td>FitnessFan</td>\n      <td>Instagram</td>\n      <td>#Fitness #Workout</td>\n      <td>20.0</td>\n      <td>40.0</td>\n      <td>USA</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>3</td>\n      <td>Excited about the upcoming weekend getaway!  ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 18:20:00</td>\n      <td>AdventureX</td>\n      <td>Facebook</td>\n      <td>#Travel #Adventure</td>\n      <td>8.0</td>\n      <td>15.0</td>\n      <td>UK</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>4</td>\n      <td>Trying out a new recipe for dinner tonight.  ...</td>\n      <td>Neutral</td>\n      <td>2023-01-15 19:55:00</td>\n      <td>ChefCook</td>\n      <td>Instagram</td>\n      <td>#Cooking #Food</td>\n      <td>12.0</td>\n      <td>25.0</td>\n      <td>Australia</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>19</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":1},{"cell_type":"code","source":"# Phase 1: Importing Libraries\nimport pandas as pd\nimport numpy as np\nimport re\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\nfrom textblob import TextBlob\n\n# Phase 2: Load Dataset\ndf = pd.read_csv('/kaggle/input/sentiment-analysis/sentimentdataset.csv') \n\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:49.769977Z","iopub.execute_input":"2025-06-01T14:07:49.770247Z","iopub.status.idle":"2025-06-01T14:07:52.037086Z","shell.execute_reply.started":"2025-06-01T14:07:49.770226Z","shell.execute_reply":"2025-06-01T14:07:52.036036Z"}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   Unnamed: 0.1  Unnamed: 0  \\\n0             0           0   \n1             1           1   \n2             2           2   \n3             3           3   \n4             4           4   \n\n                                                Text    Sentiment  \\\n0   Enjoying a beautiful day at the park!        ...   Positive     \n1   Traffic was terrible this morning.           ...   Negative     \n2   Just finished an amazing workout! ðŸ’ª          ...   Positive     \n3   Excited about the upcoming weekend getaway!  ...   Positive     \n4   Trying out a new recipe for dinner tonight.  ...   Neutral      \n\n             Timestamp            User     Platform  \\\n0  2023-01-15 12:30:00   User123          Twitter     \n1  2023-01-15 08:45:00   CommuterX        Twitter     \n2  2023-01-15 15:45:00   FitnessFan      Instagram    \n3  2023-01-15 18:20:00   AdventureX       Facebook    \n4  2023-01-15 19:55:00   ChefCook        Instagram    \n\n                                     Hashtags  Retweets  Likes       Country  \\\n0   #Nature #Park                                  15.0   30.0     USA         \n1   #Traffic #Morning                               5.0   10.0     Canada      \n2   #Fitness #Workout                              20.0   40.0   USA           \n3   #Travel #Adventure                              8.0   15.0     UK          \n4   #Cooking #Food                                 12.0   25.0    Australia    \n\n   Year  Month  Day  Hour  \n0  2023      1   15    12  \n1  2023      1   15     8  \n2  2023      1   15    15  \n3  2023      1   15    18  \n4  2023      1   15    19  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0.1</th>\n      <th>Unnamed: 0</th>\n      <th>Text</th>\n      <th>Sentiment</th>\n      <th>Timestamp</th>\n      <th>User</th>\n      <th>Platform</th>\n      <th>Hashtags</th>\n      <th>Retweets</th>\n      <th>Likes</th>\n      <th>Country</th>\n      <th>Year</th>\n      <th>Month</th>\n      <th>Day</th>\n      <th>Hour</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>Enjoying a beautiful day at the park!        ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 12:30:00</td>\n      <td>User123</td>\n      <td>Twitter</td>\n      <td>#Nature #Park</td>\n      <td>15.0</td>\n      <td>30.0</td>\n      <td>USA</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>Traffic was terrible this morning.           ...</td>\n      <td>Negative</td>\n      <td>2023-01-15 08:45:00</td>\n      <td>CommuterX</td>\n      <td>Twitter</td>\n      <td>#Traffic #Morning</td>\n      <td>5.0</td>\n      <td>10.0</td>\n      <td>Canada</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2</td>\n      <td>Just finished an amazing workout! ðŸ’ª          ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 15:45:00</td>\n      <td>FitnessFan</td>\n      <td>Instagram</td>\n      <td>#Fitness #Workout</td>\n      <td>20.0</td>\n      <td>40.0</td>\n      <td>USA</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>3</td>\n      <td>Excited about the upcoming weekend getaway!  ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 18:20:00</td>\n      <td>AdventureX</td>\n      <td>Facebook</td>\n      <td>#Travel #Adventure</td>\n      <td>8.0</td>\n      <td>15.0</td>\n      <td>UK</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>4</td>\n      <td>Trying out a new recipe for dinner tonight.  ...</td>\n      <td>Neutral</td>\n      <td>2023-01-15 19:55:00</td>\n      <td>ChefCook</td>\n      <td>Instagram</td>\n      <td>#Cooking #Food</td>\n      <td>12.0</td>\n      <td>25.0</td>\n      <td>Australia</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>19</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"# Phase 3: Initial Data Exploration\nprint(\"Dataset Shape:\", df.shape)\nprint(\"\\nColumns:\", df.columns.tolist())\nprint(\"\\nData Types:\\n\", df.dtypes)\nprint(\"\\nMissing Values:\\n\", df.isnull().sum())\nprint(\"\\nDuplicate Rows:\", df.duplicated().sum())\nprint(\"\\nSentiment Distribution:\\n\", df['Sentiment'].value_counts())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:52.038182Z","iopub.execute_input":"2025-06-01T14:07:52.038511Z","iopub.status.idle":"2025-06-01T14:07:52.062507Z","shell.execute_reply.started":"2025-06-01T14:07:52.038482Z","shell.execute_reply":"2025-06-01T14:07:52.061512Z"}},"outputs":[{"name":"stdout","text":"Dataset Shape: (732, 15)\n\nColumns: ['Unnamed: 0.1', 'Unnamed: 0', 'Text', 'Sentiment', 'Timestamp', 'User', 'Platform', 'Hashtags', 'Retweets', 'Likes', 'Country', 'Year', 'Month', 'Day', 'Hour']\n\nData Types:\n Unnamed: 0.1      int64\nUnnamed: 0        int64\nText             object\nSentiment        object\nTimestamp        object\nUser             object\nPlatform         object\nHashtags         object\nRetweets        float64\nLikes           float64\nCountry          object\nYear              int64\nMonth             int64\nDay               int64\nHour              int64\ndtype: object\n\nMissing Values:\n Unnamed: 0.1    0\nUnnamed: 0      0\nText            0\nSentiment       0\nTimestamp       0\nUser            0\nPlatform        0\nHashtags        0\nRetweets        0\nLikes           0\nCountry         0\nYear            0\nMonth           0\nDay             0\nHour            0\ndtype: int64\n\nDuplicate Rows: 0\n\nSentiment Distribution:\n Sentiment\nPositive           44\nJoy                42\nExcitement         32\nNeutral            14\nContentment        14\n                   ..\nAdrenaline          1\nHarmony             1\nArtisticBurst       1\nRadiance            1\nElegance            1\nName: count, Length: 279, dtype: int64\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"# Drop redundant columns\ndf_clean = df.drop(columns=['Unnamed: 0.1', 'Unnamed: 0'])\n\n# Convert timestamp\ndf_clean['Timestamp'] = pd.to_datetime(df_clean['Timestamp'])\ndf_clean['DayOfWeek'] = df_clean['Timestamp'].dt.day_name()\ndf_clean['TimePeriod'] = df_clean['Hour'].apply(lambda x: 'Morning' if 5<=x<12 \n                                               else 'Afternoon' if 12<=x<17\n                                               else 'Evening')\n\n# Clean text data\ndef clean_text(text):\n    text = text.lower()\n    text = re.sub(r'http\\S+', '', text)  # Remove URLs\n    text = re.sub(r'#\\w+', '', text)  # Remove hashtags (already in Hashtags column)\n    text = re.sub(r'[^a-zA-Z\\s]', '', text)  # Remove special characters\n    return text.strip()\n\ndf_clean['CleanedText'] = df_clean['Text'].apply(clean_text)\n\n# Show cleaned data\nprint(\"\\nCleaned Data Structure:\")\nprint(df_clean.head())\nprint(\"\\nNew Columns:\", df_clean.columns.tolist())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:52.064602Z","iopub.execute_input":"2025-06-01T14:07:52.064995Z","iopub.status.idle":"2025-06-01T14:07:52.096443Z","shell.execute_reply.started":"2025-06-01T14:07:52.064971Z","shell.execute_reply":"2025-06-01T14:07:52.095671Z"}},"outputs":[{"name":"stdout","text":"\nCleaned Data Structure:\n                                                Text    Sentiment  \\\n0   Enjoying a beautiful day at the park!        ...   Positive     \n1   Traffic was terrible this morning.           ...   Negative     \n2   Just finished an amazing workout! ðŸ’ª          ...   Positive     \n3   Excited about the upcoming weekend getaway!  ...   Positive     \n4   Trying out a new recipe for dinner tonight.  ...   Neutral      \n\n            Timestamp            User     Platform  \\\n0 2023-01-15 12:30:00   User123          Twitter     \n1 2023-01-15 08:45:00   CommuterX        Twitter     \n2 2023-01-15 15:45:00   FitnessFan      Instagram    \n3 2023-01-15 18:20:00   AdventureX       Facebook    \n4 2023-01-15 19:55:00   ChefCook        Instagram    \n\n                                     Hashtags  Retweets  Likes       Country  \\\n0   #Nature #Park                                  15.0   30.0     USA         \n1   #Traffic #Morning                               5.0   10.0     Canada      \n2   #Fitness #Workout                              20.0   40.0   USA           \n3   #Travel #Adventure                              8.0   15.0     UK          \n4   #Cooking #Food                                 12.0   25.0    Australia    \n\n   Year  Month  Day  Hour DayOfWeek TimePeriod  \\\n0  2023      1   15    12    Sunday  Afternoon   \n1  2023      1   15     8    Sunday    Morning   \n2  2023      1   15    15    Sunday  Afternoon   \n3  2023      1   15    18    Sunday    Evening   \n4  2023      1   15    19    Sunday    Evening   \n\n                                  CleanedText  \n0        enjoying a beautiful day at the park  \n1           traffic was terrible this morning  \n2            just finished an amazing workout  \n3  excited about the upcoming weekend getaway  \n4  trying out a new recipe for dinner tonight  \n\nNew Columns: ['Text', 'Sentiment', 'Timestamp', 'User', 'Platform', 'Hashtags', 'Retweets', 'Likes', 'Country', 'Year', 'Month', 'Day', 'Hour', 'DayOfWeek', 'TimePeriod', 'CleanedText']\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"from textblob import TextBlob\n\ndef get_sentiment(text):\n    analysis = TextBlob(text)\n    if analysis.sentiment.polarity > 0.1:\n        return 'Positive'\n    elif analysis.sentiment.polarity < -0.1:\n        return 'Negative'\n    else:\n        return 'Neutral'\n\n# Apply to cleaned text\ndf_clean['ComputedSentiment'] = df_clean['CleanedText'].apply(get_sentiment)\n\n# Verify new distribution\nprint(\"\\nComputed Sentiment Distribution:\")\nprint(df_clean['ComputedSentiment'].value_counts())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:52.097314Z","iopub.execute_input":"2025-06-01T14:07:52.097678Z","iopub.status.idle":"2025-06-01T14:07:52.389845Z","shell.execute_reply.started":"2025-06-01T14:07:52.097635Z","shell.execute_reply":"2025-06-01T14:07:52.389082Z"}},"outputs":[{"name":"stdout","text":"\nComputed Sentiment Distribution:\nComputedSentiment\nNeutral     395\nPositive    240\nNegative     97\nName: count, dtype: int64\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"print(pd.crosstab(df_clean['Sentiment'], df_clean['ComputedSentiment']))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:52.390709Z","iopub.execute_input":"2025-06-01T14:07:52.390960Z","iopub.status.idle":"2025-06-01T14:07:52.422664Z","shell.execute_reply.started":"2025-06-01T14:07:52.390941Z","shell.execute_reply":"2025-06-01T14:07:52.421891Z"}},"outputs":[{"name":"stdout","text":"ComputedSentiment  Negative  Neutral  Positive\nSentiment                                     \nAcceptance                0        3         0\nAcceptance                1        3         1\nAccomplishment            0        0         3\nAdmiration                0        0         1\nAdmiration                0        1         1\n...                     ...      ...       ...\nWonder                    0        1         0\nWonder                    0        1         0\nWonderment                0        1         0\nYearning                  1        1         0\nZest                      0        0         2\n\n[279 rows x 3 columns]\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"plt.figure(figsize=(10,6))\nsns.countplot(x='ComputedSentiment', data=df_clean)\nplt.title('Final Sentiment Distribution')\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:52.423614Z","iopub.execute_input":"2025-06-01T14:07:52.423950Z","iopub.status.idle":"2025-06-01T14:07:52.690370Z","shell.execute_reply.started":"2025-06-01T14:07:52.423922Z","shell.execute_reply":"2025-06-01T14:07:52.689434Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"# 1. Word frequency analysis\nfrom collections import Counter\nimport re\n\n# Extract all words from cleaned text\nall_words = ' '.join(df_clean['CleanedText']).split()\nword_freq = Counter(all_words)\n\nprint(\"Top 15 Most Frequent Words:\")\nprint(word_freq.most_common(15))\n\n# 2. Sentiment-specific word analysis\npositive_words = ' '.join(df_clean[df_clean['ComputedSentiment']=='Positive']['CleanedText']).split()\nnegative_words = ' '.join(df_clean[df_clean['ComputedSentiment']=='Negative']['CleanedText']).split()\n\nprint(\"\\nTop Positive Words:\")\nprint(Counter(positive_words).most_common(10))\n\nprint(\"\\nTop Negative Words:\")\nprint(Counter(negative_words).most_common(10))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:52.691424Z","iopub.execute_input":"2025-06-01T14:07:52.692136Z","iopub.status.idle":"2025-06-01T14:07:52.705240Z","shell.execute_reply.started":"2025-06-01T14:07:52.692103Z","shell.execute_reply":"2025-06-01T14:07:52.704484Z"}},"outputs":[{"name":"stdout","text":"Top 15 Most Frequent Words:\n[('the', 830), ('a', 656), ('of', 623), ('in', 300), ('to', 133), ('and', 111), ('with', 111), ('for', 99), ('on', 91), ('by', 70), ('through', 52), ('at', 51), ('an', 51), ('new', 43), ('my', 41)]\n\nTop Positive Words:\n[('the', 260), ('a', 232), ('of', 177), ('in', 96), ('and', 50), ('to', 49), ('with', 48), ('for', 39), ('new', 34), ('on', 27)]\n\nTop Negative Words:\n[('the', 126), ('of', 86), ('a', 79), ('in', 38), ('to', 16), ('on', 15), ('with', 13), ('by', 13), ('and', 10), ('is', 9)]\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"# Platform-wise sentiment analysis\nplt.figure(figsize=(12, 5))\n\n# Subplot 1: Platform distribution\nplt.subplot(1, 2, 1)\nsns.countplot(data=df_clean, x='Platform')\nplt.title('Posts by Platform')\nplt.xticks(rotation=45)\n\n# Subplot 2: Sentiment by Platform\nplt.subplot(1, 2, 2)\nsns.countplot(data=df_clean, x='Platform', hue='ComputedSentiment')\nplt.title('Sentiment Distribution by Platform')\nplt.xticks(rotation=45)\n\nplt.tight_layout()\nplt.show()\n\n# Time-based analysis\nplt.figure(figsize=(12, 4))\nsns.countplot(data=df_clean, x='TimePeriod', hue='ComputedSentiment')\nplt.title('Sentiment by Time Period')\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:52.706089Z","iopub.execute_input":"2025-06-01T14:07:52.706373Z","iopub.status.idle":"2025-06-01T14:07:53.301663Z","shell.execute_reply.started":"2025-06-01T14:07:52.706354Z","shell.execute_reply":"2025-06-01T14:07:53.300802Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x500 with 2 Axes>","image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x400 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"df_clean['Platform'] = df_clean['Platform'].str.strip().str.title()\ndf_clean['Country'] = df_clean['Country'].str.strip().str.title()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.302578Z","iopub.execute_input":"2025-06-01T14:07:53.302814Z","iopub.status.idle":"2025-06-01T14:07:53.310799Z","shell.execute_reply.started":"2025-06-01T14:07:53.302795Z","shell.execute_reply":"2025-06-01T14:07:53.309893Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"def extract_hashtags(hashtags):\n    if pd.isna(hashtags):\n        return []\n    return [tag.strip() for tag in hashtags.split() if tag.startswith('#')]\n\ndf_clean['ExtractedHashtags'] = df_clean['Hashtags'].apply(extract_hashtags)\n\n# Create a list of all hashtags (flatten the list)\nall_hashtags = [tag for sublist in df_clean['ExtractedHashtags'] for tag in sublist]\n\n# Count the frequency of each hashtag\nhashtag_counts = pd.Series(all_hashtags).value_counts()\n\nprint(\"\\nTop 10 Hashtags:\")\nprint(hashtag_counts.head(10))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.312019Z","iopub.execute_input":"2025-06-01T14:07:53.312349Z","iopub.status.idle":"2025-06-01T14:07:53.371597Z","shell.execute_reply.started":"2025-06-01T14:07:53.312318Z","shell.execute_reply":"2025-06-01T14:07:53.370554Z"}},"outputs":[{"name":"stdout","text":"\nTop 10 Hashtags:\n#Serenity       15\n#Excitement     13\n#Gratitude      13\n#Despair        11\n#Nostalgia      11\n#Curiosity      10\n#Contentment    10\n#Hopeful         9\n#Grief           9\n#Awe             9\nName: count, dtype: int64\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"# Check for null/empty in Hashtags\nnull_hashtags = df_clean['Hashtags'].isnull().sum()\nempty_hashtags = (df_clean['Hashtags'].str.strip() == '').sum()\nprint(\"Null Hashtags:\", null_hashtags)\nprint(\"Empty Hashtags:\", empty_hashtags)\n\n# View sample of Hashtags and ExtractedHashtags\nprint(df_clean[['Hashtags', 'ExtractedHashtags']].head(10))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.372540Z","iopub.execute_input":"2025-06-01T14:07:53.373423Z","iopub.status.idle":"2025-06-01T14:07:53.394302Z","shell.execute_reply.started":"2025-06-01T14:07:53.373375Z","shell.execute_reply":"2025-06-01T14:07:53.393365Z"}},"outputs":[{"name":"stdout","text":"Null Hashtags: 0\nEmpty Hashtags: 0\n                                     Hashtags             ExtractedHashtags\n0   #Nature #Park                                          [#Nature, #Park]\n1   #Traffic #Morning                                  [#Traffic, #Morning]\n2   #Fitness #Workout                                  [#Fitness, #Workout]\n3   #Travel #Adventure                                [#Travel, #Adventure]\n4   #Cooking #Food                                        [#Cooking, #Food]\n5     #Gratitude #PositiveVibes                [#Gratitude, #PositiveVibes]\n6   #RainyDays #Cozy                                    [#RainyDays, #Cozy]\n7    #MovieNight #MustWatch                       [#MovieNight, #MustWatch]\n8    #Politics #Debate                                 [#Politics, #Debate]\n9    #Summer #BeachDays                               [#Summer, #BeachDays]\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"sentiment_platform = df_clean.groupby(['Platform', 'ComputedSentiment']).size().unstack(fill_value=0)\nprint(\"Sentiment by Platform:\")\nprint(sentiment_platform)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.397382Z","iopub.execute_input":"2025-06-01T14:07:53.397651Z","iopub.status.idle":"2025-06-01T14:07:53.414363Z","shell.execute_reply.started":"2025-06-01T14:07:53.397610Z","shell.execute_reply":"2025-06-01T14:07:53.413587Z"}},"outputs":[{"name":"stdout","text":"Sentiment by Platform:\nComputedSentiment  Negative  Neutral  Positive\nPlatform                                      \nFacebook                 31      138        62\nInstagram                26      134        98\nTwitter                  40      123        80\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"engagement_platform = df_clean.groupby(['Platform', 'ComputedSentiment']).agg({\n    'Likes': 'mean',\n    'Retweets': 'mean'\n})\nprint(\"\\nAverage Engagement by Platform and Sentiment:\")\nprint(engagement_platform)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.415318Z","iopub.execute_input":"2025-06-01T14:07:53.415580Z","iopub.status.idle":"2025-06-01T14:07:53.435470Z","shell.execute_reply.started":"2025-06-01T14:07:53.415562Z","shell.execute_reply":"2025-06-01T14:07:53.434569Z"}},"outputs":[{"name":"stdout","text":"\nAverage Engagement by Platform and Sentiment:\n                                 Likes   Retweets\nPlatform  ComputedSentiment                      \nFacebook  Negative           36.935484  18.516129\n          Neutral            41.021739  20.543478\n          Positive           46.225806  23.145161\nInstagram Negative           38.384615  19.307692\n          Neutral            43.634328  21.850746\n          Positive           48.857143  24.500000\nTwitter   Negative           39.300000  19.775000\n          Neutral            39.853659  20.000000\n          Positive           45.312500  22.725000\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"avg_likes = df_clean.groupby(['Country', 'ComputedSentiment'])['Likes'].mean().unstack(fill_value=0)\nprint(\"\\nAverage Likes by Country and Sentiment:\")\nprint(avg_likes)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.436292Z","iopub.execute_input":"2025-06-01T14:07:53.436623Z","iopub.status.idle":"2025-06-01T14:07:53.449208Z","shell.execute_reply.started":"2025-06-01T14:07:53.436601Z","shell.execute_reply":"2025-06-01T14:07:53.448327Z"}},"outputs":[{"name":"stdout","text":"\nAverage Likes by Country and Sentiment:\nComputedSentiment   Negative    Neutral   Positive\nCountry                                           \nAustralia          36.909091  39.355556  39.421053\nAustria             0.000000  45.000000   0.000000\nBelgium             0.000000  70.000000  70.000000\nBrazil             41.666667  57.142857  53.571429\nCambodia           40.000000   0.000000   0.000000\nCanada             33.400000  39.643836  45.857143\nChina               0.000000   0.000000  35.000000\nColombia            0.000000  55.000000   0.000000\nCzech Republic      0.000000  35.000000   0.000000\nDenmark             0.000000  40.000000  40.000000\nFrance             40.000000  45.909091  51.666667\nGermany            37.500000  49.444444  51.666667\nGreece             46.666667  40.000000   0.000000\nIndia              35.400000  35.350000  45.350000\nIreland             0.000000  50.000000   0.000000\nItaly              53.333333  42.500000  50.000000\nJamaica             0.000000  60.000000   0.000000\nJapan               0.000000  53.333333  51.666667\nJordan              0.000000  60.000000   0.000000\nKenya               0.000000   0.000000  45.000000\nMaldives            0.000000  45.000000   0.000000\nNetherlands         0.000000  45.000000  56.666667\nNorway              0.000000   0.000000  45.000000\nPeru                0.000000   0.000000  55.000000\nPortugal            0.000000  55.000000   0.000000\nScotland            0.000000   0.000000  45.000000\nSouth Africa       60.000000  74.000000   0.000000\nSpain              40.000000  47.500000  38.333333\nSweden              0.000000  70.000000   0.000000\nSwitzerland        55.000000   0.000000   0.000000\nThailand            0.000000  70.000000   0.000000\nUk                 37.466667  37.443038  47.081633\nUsa                38.181818  42.989247  48.219178\n","output_type":"stream"}],"execution_count":15},{"cell_type":"code","source":"avg_retweets = df_clean.groupby(['Country', 'ComputedSentiment'])['Retweets'].mean().unstack(fill_value=0)\nprint(\"\\nAverage Retweets by Country and Sentiment:\")\nprint(avg_retweets)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.450560Z","iopub.execute_input":"2025-06-01T14:07:53.450907Z","iopub.status.idle":"2025-06-01T14:07:53.472253Z","shell.execute_reply.started":"2025-06-01T14:07:53.450878Z","shell.execute_reply":"2025-06-01T14:07:53.471218Z"}},"outputs":[{"name":"stdout","text":"\nAverage Retweets by Country and Sentiment:\nComputedSentiment   Negative    Neutral   Positive\nCountry                                           \nAustralia          18.636364  19.711111  19.578947\nAustria             0.000000  22.000000   0.000000\nBelgium             0.000000  35.000000  35.000000\nBrazil             21.000000  28.428571  26.571429\nCambodia           20.000000   0.000000   0.000000\nCanada             16.750000  19.835616  23.047619\nChina               0.000000   0.000000  18.000000\nColombia            0.000000  28.000000   0.000000\nCzech Republic      0.000000  18.000000   0.000000\nDenmark             0.000000  20.000000  20.000000\nFrance             20.000000  23.090909  26.000000\nGermany            18.500000  24.888889  26.000000\nGreece             23.666667  20.000000   0.000000\nIndia              17.800000  17.625000  22.550000\nIreland             0.000000  25.000000   0.000000\nItaly              27.000000  21.333333  25.000000\nJamaica             0.000000  30.000000   0.000000\nJapan               0.000000  26.833333  25.777778\nJordan              0.000000  30.000000   0.000000\nKenya               0.000000   0.000000  22.000000\nMaldives            0.000000  22.000000   0.000000\nNetherlands         0.000000  22.000000  28.333333\nNorway              0.000000   0.000000  22.000000\nPeru                0.000000   0.000000  28.000000\nPortugal            0.000000  28.000000   0.000000\nScotland            0.000000   0.000000  22.000000\nSouth Africa       30.000000  37.000000   0.000000\nSpain              20.000000  24.000000  19.333333\nSweden              0.000000  35.000000   0.000000\nSwitzerland        27.333333   0.000000   0.000000\nThailand            0.000000  35.000000   0.000000\nUk                 18.933333  18.797468  23.714286\nUsa                19.136364  21.569892  24.205479\n","output_type":"stream"}],"execution_count":16},{"cell_type":"code","source":"print(df_clean['Platform'].unique())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.473246Z","iopub.execute_input":"2025-06-01T14:07:53.473528Z","iopub.status.idle":"2025-06-01T14:07:53.484273Z","shell.execute_reply.started":"2025-06-01T14:07:53.473507Z","shell.execute_reply":"2025-06-01T14:07:53.483315Z"}},"outputs":[{"name":"stdout","text":"['Twitter' 'Instagram' 'Facebook']\n","output_type":"stream"}],"execution_count":17},{"cell_type":"code","source":"print(df_clean['Country'].unique())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.485084Z","iopub.execute_input":"2025-06-01T14:07:53.485411Z","iopub.status.idle":"2025-06-01T14:07:53.502118Z","shell.execute_reply.started":"2025-06-01T14:07:53.485376Z","shell.execute_reply":"2025-06-01T14:07:53.501335Z"}},"outputs":[{"name":"stdout","text":"['Usa' 'Canada' 'Uk' 'Australia' 'India' 'France' 'Brazil' 'Japan'\n 'Greece' 'Germany' 'Sweden' 'Italy' 'Netherlands' 'South Africa' 'Spain'\n 'Portugal' 'Switzerland' 'Austria' 'Belgium' 'Denmark' 'Czech Republic'\n 'Jordan' 'Peru' 'Maldives' 'China' 'Cambodia' 'Norway' 'Colombia'\n 'Ireland' 'Jamaica' 'Kenya' 'Scotland' 'Thailand']\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"df_clean","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.503358Z","iopub.execute_input":"2025-06-01T14:07:53.503638Z","iopub.status.idle":"2025-06-01T14:07:53.536807Z","shell.execute_reply.started":"2025-06-01T14:07:53.503574Z","shell.execute_reply":"2025-06-01T14:07:53.535920Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"                                                  Text    Sentiment  \\\n0     Enjoying a beautiful day at the park!        ...   Positive     \n1     Traffic was terrible this morning.           ...   Negative     \n2     Just finished an amazing workout! ðŸ’ª          ...   Positive     \n3     Excited about the upcoming weekend getaway!  ...   Positive     \n4     Trying out a new recipe for dinner tonight.  ...   Neutral      \n..                                                 ...          ...   \n727  Collaborating on a science project that receiv...       Happy    \n728  Attending a surprise birthday party organized ...       Happy    \n729  Successfully fundraising for a school charity ...       Happy    \n730  Participating in a multicultural festival, cel...       Happy    \n731  Organizing a virtual talent show during challe...       Happy    \n\n              Timestamp                                   User   Platform  \\\n0   2023-01-15 12:30:00                          User123          Twitter   \n1   2023-01-15 08:45:00                          CommuterX        Twitter   \n2   2023-01-15 15:45:00                          FitnessFan     Instagram   \n3   2023-01-15 18:20:00                          AdventureX      Facebook   \n4   2023-01-15 19:55:00                          ChefCook       Instagram   \n..                  ...                                    ...        ...   \n727 2017-08-18 18:20:00       ScienceProjectSuccessHighSchool    Facebook   \n728 2018-06-22 14:15:00            BirthdayPartyJoyHighSchool   Instagram   \n729 2019-04-05 17:30:00   CharityFundraisingTriumphHighSchool     Twitter   \n730 2020-02-29 20:45:00    MulticulturalFestivalJoyHighSchool    Facebook   \n731 2020-11-15 15:15:00    VirtualTalentShowSuccessHighSchool   Instagram   \n\n                                          Hashtags  Retweets  Likes  \\\n0        #Nature #Park                                  15.0   30.0   \n1        #Traffic #Morning                               5.0   10.0   \n2        #Fitness #Workout                              20.0   40.0   \n3        #Travel #Adventure                              8.0   15.0   \n4        #Cooking #Food                                 12.0   25.0   \n..                                             ...       ...    ...   \n727         #ScienceFairWinner #HighSchoolScience       20.0   39.0   \n728    #SurpriseCelebration #HighSchoolFriendship       25.0   48.0   \n729      #CommunityGiving #HighSchoolPhilanthropy       22.0   42.0   \n730         #CulturalCelebration #HighSchoolUnity       21.0   43.0   \n731   #VirtualEntertainment #HighSchoolPositivity       24.0   47.0   \n\n       Country  Year  Month  Day  Hour DayOfWeek TimePeriod  \\\n0          Usa  2023      1   15    12    Sunday  Afternoon   \n1       Canada  2023      1   15     8    Sunday    Morning   \n2          Usa  2023      1   15    15    Sunday  Afternoon   \n3           Uk  2023      1   15    18    Sunday    Evening   \n4    Australia  2023      1   15    19    Sunday    Evening   \n..         ...   ...    ...  ...   ...       ...        ...   \n727         Uk  2017      8   18    18    Friday    Evening   \n728        Usa  2018      6   22    14    Friday  Afternoon   \n729     Canada  2019      4    5    17    Friday    Evening   \n730         Uk  2020      2   29    20  Saturday    Evening   \n731        Usa  2020     11   15    15    Sunday  Afternoon   \n\n                                           CleanedText ComputedSentiment  \\\n0                 enjoying a beautiful day at the park          Positive   \n1                    traffic was terrible this morning          Negative   \n2                     just finished an amazing workout          Positive   \n3           excited about the upcoming weekend getaway          Positive   \n4           trying out a new recipe for dinner tonight          Positive   \n..                                                 ...               ...   \n727  collaborating on a science project that receiv...          Positive   \n728  attending a surprise birthday party organized ...          Positive   \n729  successfully fundraising for a school charity ...          Positive   \n730  participating in a multicultural festival cele...          Positive   \n731  organizing a virtual talent show during challe...          Positive   \n\n                                  ExtractedHashtags  \n0                                  [#Nature, #Park]  \n1                              [#Traffic, #Morning]  \n2                              [#Fitness, #Workout]  \n3                             [#Travel, #Adventure]  \n4                                 [#Cooking, #Food]  \n..                                              ...  \n727        [#ScienceFairWinner, #HighSchoolScience]  \n728   [#SurpriseCelebration, #HighSchoolFriendship]  \n729     [#CommunityGiving, #HighSchoolPhilanthropy]  \n730        [#CulturalCelebration, #HighSchoolUnity]  \n731  [#VirtualEntertainment, #HighSchoolPositivity]  \n\n[732 rows x 18 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Text</th>\n      <th>Sentiment</th>\n      <th>Timestamp</th>\n      <th>User</th>\n      <th>Platform</th>\n      <th>Hashtags</th>\n      <th>Retweets</th>\n      <th>Likes</th>\n      <th>Country</th>\n      <th>Year</th>\n      <th>Month</th>\n      <th>Day</th>\n      <th>Hour</th>\n      <th>DayOfWeek</th>\n      <th>TimePeriod</th>\n      <th>CleanedText</th>\n      <th>ComputedSentiment</th>\n      <th>ExtractedHashtags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Enjoying a beautiful day at the park!        ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 12:30:00</td>\n      <td>User123</td>\n      <td>Twitter</td>\n      <td>#Nature #Park</td>\n      <td>15.0</td>\n      <td>30.0</td>\n      <td>Usa</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>12</td>\n      <td>Sunday</td>\n      <td>Afternoon</td>\n      <td>enjoying a beautiful day at the park</td>\n      <td>Positive</td>\n      <td>[#Nature, #Park]</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Traffic was terrible this morning.           ...</td>\n      <td>Negative</td>\n      <td>2023-01-15 08:45:00</td>\n      <td>CommuterX</td>\n      <td>Twitter</td>\n      <td>#Traffic #Morning</td>\n      <td>5.0</td>\n      <td>10.0</td>\n      <td>Canada</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>8</td>\n      <td>Sunday</td>\n      <td>Morning</td>\n      <td>traffic was terrible this morning</td>\n      <td>Negative</td>\n      <td>[#Traffic, #Morning]</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Just finished an amazing workout! ðŸ’ª          ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 15:45:00</td>\n      <td>FitnessFan</td>\n      <td>Instagram</td>\n      <td>#Fitness #Workout</td>\n      <td>20.0</td>\n      <td>40.0</td>\n      <td>Usa</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>15</td>\n      <td>Sunday</td>\n      <td>Afternoon</td>\n      <td>just finished an amazing workout</td>\n      <td>Positive</td>\n      <td>[#Fitness, #Workout]</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Excited about the upcoming weekend getaway!  ...</td>\n      <td>Positive</td>\n      <td>2023-01-15 18:20:00</td>\n      <td>AdventureX</td>\n      <td>Facebook</td>\n      <td>#Travel #Adventure</td>\n      <td>8.0</td>\n      <td>15.0</td>\n      <td>Uk</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>18</td>\n      <td>Sunday</td>\n      <td>Evening</td>\n      <td>excited about the upcoming weekend getaway</td>\n      <td>Positive</td>\n      <td>[#Travel, #Adventure]</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Trying out a new recipe for dinner tonight.  ...</td>\n      <td>Neutral</td>\n      <td>2023-01-15 19:55:00</td>\n      <td>ChefCook</td>\n      <td>Instagram</td>\n      <td>#Cooking #Food</td>\n      <td>12.0</td>\n      <td>25.0</td>\n      <td>Australia</td>\n      <td>2023</td>\n      <td>1</td>\n      <td>15</td>\n      <td>19</td>\n      <td>Sunday</td>\n      <td>Evening</td>\n      <td>trying out a new recipe for dinner tonight</td>\n      <td>Positive</td>\n      <td>[#Cooking, #Food]</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>727</th>\n      <td>Collaborating on a science project that receiv...</td>\n      <td>Happy</td>\n      <td>2017-08-18 18:20:00</td>\n      <td>ScienceProjectSuccessHighSchool</td>\n      <td>Facebook</td>\n      <td>#ScienceFairWinner #HighSchoolScience</td>\n      <td>20.0</td>\n      <td>39.0</td>\n      <td>Uk</td>\n      <td>2017</td>\n      <td>8</td>\n      <td>18</td>\n      <td>18</td>\n      <td>Friday</td>\n      <td>Evening</td>\n      <td>collaborating on a science project that receiv...</td>\n      <td>Positive</td>\n      <td>[#ScienceFairWinner, #HighSchoolScience]</td>\n    </tr>\n    <tr>\n      <th>728</th>\n      <td>Attending a surprise birthday party organized ...</td>\n      <td>Happy</td>\n      <td>2018-06-22 14:15:00</td>\n      <td>BirthdayPartyJoyHighSchool</td>\n      <td>Instagram</td>\n      <td>#SurpriseCelebration #HighSchoolFriendship</td>\n      <td>25.0</td>\n      <td>48.0</td>\n      <td>Usa</td>\n      <td>2018</td>\n      <td>6</td>\n      <td>22</td>\n      <td>14</td>\n      <td>Friday</td>\n      <td>Afternoon</td>\n      <td>attending a surprise birthday party organized ...</td>\n      <td>Positive</td>\n      <td>[#SurpriseCelebration, #HighSchoolFriendship]</td>\n    </tr>\n    <tr>\n      <th>729</th>\n      <td>Successfully fundraising for a school charity ...</td>\n      <td>Happy</td>\n      <td>2019-04-05 17:30:00</td>\n      <td>CharityFundraisingTriumphHighSchool</td>\n      <td>Twitter</td>\n      <td>#CommunityGiving #HighSchoolPhilanthropy</td>\n      <td>22.0</td>\n      <td>42.0</td>\n      <td>Canada</td>\n      <td>2019</td>\n      <td>4</td>\n      <td>5</td>\n      <td>17</td>\n      <td>Friday</td>\n      <td>Evening</td>\n      <td>successfully fundraising for a school charity ...</td>\n      <td>Positive</td>\n      <td>[#CommunityGiving, #HighSchoolPhilanthropy]</td>\n    </tr>\n    <tr>\n      <th>730</th>\n      <td>Participating in a multicultural festival, cel...</td>\n      <td>Happy</td>\n      <td>2020-02-29 20:45:00</td>\n      <td>MulticulturalFestivalJoyHighSchool</td>\n      <td>Facebook</td>\n      <td>#CulturalCelebration #HighSchoolUnity</td>\n      <td>21.0</td>\n      <td>43.0</td>\n      <td>Uk</td>\n      <td>2020</td>\n      <td>2</td>\n      <td>29</td>\n      <td>20</td>\n      <td>Saturday</td>\n      <td>Evening</td>\n      <td>participating in a multicultural festival cele...</td>\n      <td>Positive</td>\n      <td>[#CulturalCelebration, #HighSchoolUnity]</td>\n    </tr>\n    <tr>\n      <th>731</th>\n      <td>Organizing a virtual talent show during challe...</td>\n      <td>Happy</td>\n      <td>2020-11-15 15:15:00</td>\n      <td>VirtualTalentShowSuccessHighSchool</td>\n      <td>Instagram</td>\n      <td>#VirtualEntertainment #HighSchoolPositivity</td>\n      <td>24.0</td>\n      <td>47.0</td>\n      <td>Usa</td>\n      <td>2020</td>\n      <td>11</td>\n      <td>15</td>\n      <td>15</td>\n      <td>Sunday</td>\n      <td>Afternoon</td>\n      <td>organizing a virtual talent show during challe...</td>\n      <td>Positive</td>\n      <td>[#VirtualEntertainment, #HighSchoolPositivity]</td>\n    </tr>\n  </tbody>\n</table>\n<p>732 rows Ã— 18 columns</p>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"df_clean['Timestamp'] = pd.to_datetime(df_clean['Timestamp'])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.537753Z","iopub.execute_input":"2025-06-01T14:07:53.538027Z","iopub.status.idle":"2025-06-01T14:07:53.543993Z","shell.execute_reply.started":"2025-06-01T14:07:53.538009Z","shell.execute_reply":"2025-06-01T14:07:53.543119Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"if 'Sentiment' in df_clean.columns:\n    df_clean = df_clean.drop(columns=['Sentiment'])\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.544951Z","iopub.execute_input":"2025-06-01T14:07:53.545258Z","iopub.status.idle":"2025-06-01T14:07:53.561816Z","shell.execute_reply.started":"2025-06-01T14:07:53.545230Z","shell.execute_reply":"2025-06-01T14:07:53.560913Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"print(list(df_clean.columns))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.562747Z","iopub.execute_input":"2025-06-01T14:07:53.563072Z","iopub.status.idle":"2025-06-01T14:07:53.577570Z","shell.execute_reply.started":"2025-06-01T14:07:53.563039Z","shell.execute_reply":"2025-06-01T14:07:53.576846Z"}},"outputs":[{"name":"stdout","text":"['Text', 'Timestamp', 'User', 'Platform', 'Hashtags', 'Retweets', 'Likes', 'Country', 'Year', 'Month', 'Day', 'Hour', 'DayOfWeek', 'TimePeriod', 'CleanedText', 'ComputedSentiment', 'ExtractedHashtags']\n","output_type":"stream"}],"execution_count":22},{"cell_type":"code","source":"# Ensure Timestamp is datetime\ndf_clean['Timestamp'] = pd.to_datetime(df_clean['Timestamp'])\n\n# Export to CSV\ndf_clean.to_csv(\"cleaned_social_data.csv\", index=False)\nprint(\"âœ… Data exported successfully!\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.578490Z","iopub.execute_input":"2025-06-01T14:07:53.578796Z","iopub.status.idle":"2025-06-01T14:07:53.619311Z","shell.execute_reply.started":"2025-06-01T14:07:53.578765Z","shell.execute_reply":"2025-06-01T14:07:53.618392Z"}},"outputs":[{"name":"stdout","text":"âœ… Data exported successfully!\n","output_type":"stream"}],"execution_count":23},{"cell_type":"code","source":"from collections import Counter\nimport pandas as pd\n\n# Flatten all extracted hashtags into a single list\nall_hashtags = [tag for sublist in df_clean['ExtractedHashtags'] for tag in sublist]\n\n# Count frequency of each hashtag\nhashtag_counts = Counter(all_hashtags)\n\n# Create a DataFrame\nhashtag_df = pd.DataFrame(hashtag_counts.items(), columns=['Hashtag', 'Count'])\n\n# Sort by count descending\nhashtag_df = hashtag_df.sort_values(by='Count', ascending=False)\n\n# Export to CSV\nhashtag_df.to_csv(\"top_hashtags.csv\", index=False)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:07:53.620363Z","iopub.execute_input":"2025-06-01T14:07:53.620620Z","iopub.status.idle":"2025-06-01T14:07:53.631881Z","shell.execute_reply.started":"2025-06-01T14:07:53.620601Z","shell.execute_reply":"2025-06-01T14:07:53.630805Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"import pandas as pd\n\n# Assuming df_clean is your main DataFrame\nbridge_list = []\nfor idx, hashtags in df_clean['ExtractedHashtags'].items():\n    for tag in hashtags:\n        bridge_list.append({'PostIndex': idx, 'Hashtag': tag})\n\nbridge_df = pd.DataFrame(bridge_list)\nbridge_df.to_csv(\"hashtag_bridge.csv\", index=False)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-01T14:13:42.799378Z","iopub.execute_input":"2025-06-01T14:13:42.799760Z","iopub.status.idle":"2025-06-01T14:13:42.812268Z","shell.execute_reply.started":"2025-06-01T14:13:42.799736Z","shell.execute_reply":"2025-06-01T14:13:42.811406Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}